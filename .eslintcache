[{"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\index.js":"1","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\reportWebVitals.js":"2","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\App.js":"3","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\MenuComponent.js":"4","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\shared\\dishes.js":"5","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\DishdetailComponent.js":"6","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\MainComponent.js":"7","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\HeaderComponent.js":"8","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\FooterComponent.js":"9","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\HomeComponent.js":"10","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\ContactComponent.js":"11","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\shared\\leaders.js":"12","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\shared\\comments.js":"13","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\shared\\promotions.js":"14","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\AboutComponent.js":"15","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\configureStore.js":"16","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\promotions.js":"17","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\dishes.js":"18","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\comments.js":"19","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\leaders.js":"20","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\ActionTypes.js":"21","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\ActionCreators.js":"22","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\LoadingComponent.js":"23","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\forms.js":"24"},{"size":699,"mtime":1607416175217,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":601,"mtime":1608045817945,"results":"28","hashOfConfig":"26"},{"size":2515,"mtime":1608622045094,"results":"29","hashOfConfig":"26"},{"size":1490,"mtime":1607507769219,"results":"30","hashOfConfig":"26"},{"size":8043,"mtime":1608622040658,"results":"31","hashOfConfig":"26"},{"size":3289,"mtime":1608623981613,"results":"32","hashOfConfig":"26"},{"size":5302,"mtime":1608014428796,"results":"33","hashOfConfig":"26"},{"size":2660,"mtime":1607422639385,"results":"34","hashOfConfig":"26"},{"size":1532,"mtime":1608621764529,"results":"35","hashOfConfig":"26"},{"size":10717,"mtime":1608623966755,"results":"36","hashOfConfig":"26"},{"size":2382,"mtime":1607507898940,"results":"37","hashOfConfig":"26"},{"size":4280,"mtime":1607507848185,"results":"38","hashOfConfig":"26"},{"size":445,"mtime":1607507860323,"results":"39","hashOfConfig":"26"},{"size":4497,"mtime":1607585842552,"results":"40","hashOfConfig":"26"},{"size":922,"mtime":1608623415629,"results":"41","hashOfConfig":"26"},{"size":210,"mtime":1608443468136,"results":"42","hashOfConfig":"26"},{"size":979,"mtime":1608619316053,"results":"43","hashOfConfig":"26"},{"size":616,"mtime":1608447461166,"results":"44","hashOfConfig":"26"},{"size":195,"mtime":1608443469448,"results":"45","hashOfConfig":"26"},{"size":203,"mtime":1608617746938,"results":"46","hashOfConfig":"26"},{"size":1124,"mtime":1608619574884,"results":"47","hashOfConfig":"26"},{"size":286,"mtime":1608619539046,"results":"48","hashOfConfig":"26"},{"size":167,"mtime":1608623216109,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"69xjyn",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\index.js",[],["101","102"],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\reportWebVitals.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\App.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\MenuComponent.js",["103","104","105"],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\shared\\dishes.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\DishdetailComponent.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119"],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\MainComponent.js",["120"],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\HeaderComponent.js",["121"],"import React,{Component} from 'react';\r\nimport {Navbar, NavbarBrand, Jumbotron, Nav,NavbarToggler,NavItem,Collapse, timeoutsShape,\r\nButton,Modal,ModalHeader,ModalBody, FormGroup,Form,Input,Label} from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isNavOpen:false,\r\n            isModalOpen:false // track the state whether the modal is open or not(login Form)\r\n        }\r\n        this.toggleNav=this.toggleNav.bind(this); // This is done so that the function toggleNav can be used inside JSX.\r\n        this.toggleModal=this.toggleModal.bind(this)\r\n        this.handleLogin=this.handleLogin.bind(this)\r\n    }\r\n    handleLogin(event){\r\n            this.toggleModal();\r\n            alert(\"Username:\" + this.username.value + \"Password: \" + this.password.value + \"RememberMe \"+this.remember.checked )\r\n            event.preventDefault(); // add references to the form ..This is uncontrolled form the login one here\r\n        }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen:!this.state.isNavOpen\r\n        });\r\n    }\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen:!this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <> {/**React fragment to group elements */}\r\n            <Navbar dark expand=\"md\"> {/**Only expand when medium or large */}\r\n            <div className=\"container\">\r\n                <NavbarToggler onClick={this.toggleNav}/>{/**for toggling collpase when on small screens, wont show for large screens */}\r\n                <NavbarBrand className=\"mr-auto\"href=\"/\">\r\n                    <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"con Fusion\"/>\r\n                </NavbarBrand>\r\n                <Collapse isOpen={this.state.isNavOpen} navbar>{/**Collapse if screen size small */}\r\n\r\n                <Nav navbar>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to=\"/home\">\r\n                            <span className=\"fa fa-home fa-lg\"></span>Home\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                            <span className=\"fa fa-info fa-lg\"></span>About Us\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to=\"/menu\">\r\n                            <span className=\"fa fa-list fa-lg\"></span>Menu\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                            <span className=\"fa fa-address-card fa-lg\"></span>Contact Us\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                            <span className=\"fa fa-sign-in fa-lg\">Login</span>\r\n                            </Button>\r\n                        </NavItem>\r\n                </Nav>\r\n                </Collapse>\r\n                </div>\r\n            </Navbar>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Confusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                <ModalHeader>Login</ModalHeader>\r\n                <ModalBody >\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" name=\"username\"\r\n                            innerRef={(input)=> this.username=input}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\"\r\n                            innerRef={(input)=> this.password=input}/>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\"\r\n                                innerRef={(input)=> this.remember=input}/>\r\n                                Remember me!\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                            Login\r\n                        </Button>\r\n                    </Form>\r\n                </ModalBody>\r\n            </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Header;","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\FooterComponent.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\HomeComponent.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\ContactComponent.js",["122","123","124","125","126","127","128","129","130"],"import React from 'react';\r\nimport {Breadcrumb,BreadcrumbItem, Button, Label,Col,Row} from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {Component} from 'react'\r\nimport { Control, Form, Errors, actions} from 'react-redux-form'\r\n/** Functions that will help us do validations */\r\nconst required=(val) => val && val.length;\r\nconst maxLength = (len)=> (val)=> !(val) || (val.length <= len)\r\nconst minLength = (len)=> (val)=> (val) && (val.length >= len)\r\nconst isNumber = (val) => !isNaN(Number(val))\r\nconst validEmail=(val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n     \r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n   \r\n    handleSubmit(values){\r\n        console.log(\"Current state is :\"+ JSON.stringify(values));\r\n        alert(\"Submitted\");\r\n        this.props.resetFeedbackForm();\r\n        // no ned for event prevent default method in redux\r\n    }\r\n  \r\n   \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem>\r\n                                    <Link to='/home'>Home</Link>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem>\r\n                                    <Link to=\"/\" active=\"true\" >ContactUs</Link>\r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>Menu</h3>\r\n                                <hr/>\r\n                            </div>\r\n                        </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback!</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    id=\"firstname\" name=\"firstname\"\r\n                                     placeholder=\"FirstName\"\r\n                                     className=\"form-control\" \r\n                                    validators={{\r\n                                        required,minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }}\r\n                                    />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    >\r\n\r\n                                    </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"LastName\"\r\n                                    className=\"form-control\" \r\n                                    show=\"touched\"\r\n                                    validators={{\r\n                                        required,minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} \r\n                                   \r\n                                    />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less'\r\n                                    }}\r\n                                    ></Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" placeholder=\"Telnum\" \r\n                                    show=\"touched\"\r\n                                    className=\"form-control\" \r\n                                    validators={{\r\n                                        required,minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }} \r\n                                    />\r\n                                     <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 number',\r\n                                        maxLength: 'Must be 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                    ></Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\"id=\"email\" name=\"email\" placeholder=\"Email\" \r\n                                   \r\n                                    className=\"form-control\" \r\n                                    validators={{\r\n                                        required,validEmail\r\n                                    }} \r\n                                    />\r\n                                     <Errors className=\"text-danger\" model=\".email\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail:'Email pattern mismatch'\r\n                                    }}></Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">{/**This next line is just aligning the input field with rest as it does not have a label */}\r\n                            <Col md={{size:6,offset:2}}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                        className=\"form-check-input\"\r\n                                        />{''}\r\n                                            <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n\r\n                            </Col>\r\n                            <Col md={{size:3,offset:1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" placeholder=\"Your Feedback\" rows=\"12\"\r\n                                   className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10,offset:2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Contact;","F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\shared\\leaders.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\shared\\comments.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\shared\\promotions.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\AboutComponent.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\configureStore.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\promotions.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\dishes.js",["131"],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\comments.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\leaders.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\ActionTypes.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\ActionCreators.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\components\\LoadingComponent.js",[],"F:\\ReactIntroduction\\React\\confusion\\confusion\\src\\redux\\forms.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":9,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"136","severity":1,"message":"140","line":2,"column":43,"nodeType":"138","messageId":"139","endLine":2,"endColumn":51},{"ruleId":"136","severity":1,"message":"141","line":2,"column":52,"nodeType":"138","messageId":"139","endLine":2,"endColumn":60},{"ruleId":"136","severity":1,"message":"142","line":3,"column":9,"nodeType":"138","messageId":"139","endLine":3,"endColumn":15},{"ruleId":"136","severity":1,"message":"143","line":3,"column":17,"nodeType":"138","messageId":"139","endLine":3,"endColumn":28},{"ruleId":"136","severity":1,"message":"144","line":3,"column":30,"nodeType":"138","messageId":"139","endLine":3,"endColumn":39},{"ruleId":"136","severity":1,"message":"145","line":3,"column":41,"nodeType":"138","messageId":"139","endLine":3,"endColumn":44},{"ruleId":"136","severity":1,"message":"146","line":3,"column":45,"nodeType":"138","messageId":"139","endLine":3,"endColumn":58},{"ruleId":"136","severity":1,"message":"147","line":3,"column":59,"nodeType":"138","messageId":"139","endLine":3,"endColumn":66},{"ruleId":"136","severity":1,"message":"148","line":3,"column":67,"nodeType":"138","messageId":"139","endLine":3,"endColumn":75},{"ruleId":"136","severity":1,"message":"149","line":3,"column":77,"nodeType":"138","messageId":"139","endLine":3,"endColumn":90},{"ruleId":"136","severity":1,"message":"150","line":3,"column":92,"nodeType":"138","messageId":"139","endLine":3,"endColumn":101},{"ruleId":"136","severity":1,"message":"151","line":3,"column":102,"nodeType":"138","messageId":"139","endLine":3,"endColumn":106},{"ruleId":"136","severity":1,"message":"152","line":3,"column":107,"nodeType":"138","messageId":"139","endLine":3,"endColumn":112},{"ruleId":"153","severity":1,"message":"154","line":150,"column":37,"nodeType":"155","endLine":150,"endColumn":108},{"ruleId":"153","severity":1,"message":"156","line":162,"column":33,"nodeType":"155","endLine":170,"endColumn":35},{"ruleId":"153","severity":1,"message":"156","line":183,"column":33,"nodeType":"155","endLine":190,"endColumn":35},{"ruleId":"157","severity":1,"message":"158","line":29,"column":3,"nodeType":"159","messageId":"160","endLine":33,"endColumn":4},{"ruleId":"136","severity":1,"message":"149","line":2,"column":77,"nodeType":"138","messageId":"139","endLine":2,"endColumn":90},{"ruleId":"136","severity":1,"message":"161","line":5,"column":33,"nodeType":"138","messageId":"139","endLine":5,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":66,"column":29,"nodeType":"155","endLine":66,"endColumn":71},{"ruleId":"153","severity":1,"message":"156","line":80,"column":37,"nodeType":"155","endLine":88,"endColumn":39},{"ruleId":"153","severity":1,"message":"156","line":103,"column":37,"nodeType":"155","endLine":110,"endColumn":39},{"ruleId":"153","severity":1,"message":"156","line":123,"column":37,"nodeType":"155","endLine":129,"endColumn":39},{"ruleId":"153","severity":1,"message":"156","line":143,"column":37,"nodeType":"155","endLine":149,"endColumn":39},{"ruleId":"153","severity":1,"message":"164","line":161,"column":41,"nodeType":"155","endLine":163,"endColumn":43},{"ruleId":"153","severity":1,"message":"154","line":170,"column":33,"nodeType":"155","endLine":170,"endColumn":114},{"ruleId":"153","severity":1,"message":"165","line":179,"column":37,"nodeType":"155","endLine":180,"endColumn":62},{"ruleId":"136","severity":1,"message":"166","line":1,"column":9,"nodeType":"138","messageId":"139","endLine":1,"endColumn":15},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'Media' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","'CardBody' is defined but never used.","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'Jumbotron' is defined but never used.","'Nav' is defined but never used.","'NavbarToggler' is defined but never used.","'NavItem' is defined but never used.","'Collapse' is defined but never used.","'timeoutsShape' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]